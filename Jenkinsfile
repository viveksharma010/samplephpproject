pipeline {

  agent {
    node {
      label 'master'
    }
  }

  options {
    timestamps()
  }

  stages {
//    stage('PHPUnit Test') {
//      steps {
//        echo 'Running PHPUnit...'
//        sh '/bin/phpunit ${WORKSPACE}/src'
//      }
//    }

stage("Create new tag") {
         when {
               expression {env.BRANCH_NAME == 'master'}
            }                     
            steps {
             sshagent (credentials: ['93d34e3f-d54e-4996-a351-a5bddf9d586f'])                        
                {
                script {
                   
                        def tag = sh(returnStdout: true, script: "git tag | tail -1").trim()
                        println tag
                        def semVerLib = load 'SemVer.groovy'
                        def version = semVerLib.getTagversion(tag)
                        println version
                        sh """
                            git tag -a "v${version}" \
                                -m "Generated by: ${env.JENKINS_URL}" \
                                -m "Job: ${env.JOB_NAME}" \
                                -m "Build: ${env.BUILD_NUMBER}"
                            git push --tags
                        """
                    
                }
              }
                
            }
        }
  
  }
}
